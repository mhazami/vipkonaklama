//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.81.0.
// 

public class MabnaGetewayReference
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "TransactionReferencePortBinding",
        Namespace = "http://ws.s2m.messaging/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof (responseMessageSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof (requestMessageSpec))]
    public partial class TransactionReference : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback sendConfirmationOperationCompleted;

        /// <remarks/>
        public TransactionReference()
        {
            this.Url = "https://mabna.shaparak.ir:443/TransactionReference/TransactionReference";
        }

        /// <remarks/>
        public event sendConfirmationCompletedEventHandler sendConfirmationCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.s2m.messaging/",
            ResponseNamespace = "http://ws.s2m.messaging/", Use = System.Web.Services.Description.SoapBindingUse.Literal,
            ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return:
            System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public saleConfResponse sendConfirmation(
            [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] confirmationDTO SaleConf_req)
        {
            object[] results = this.Invoke("sendConfirmation", new object[]
            {
                SaleConf_req
            });
            return ((saleConfResponse) (results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsendConfirmation(confirmationDTO SaleConf_req, System.AsyncCallback callback,
            object asyncState)
        {
            return this.BeginInvoke("sendConfirmation", new object[]
            {
                SaleConf_req
            }, callback, asyncState);
        }

        /// <remarks/>
        public saleConfResponse EndsendConfirmation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((saleConfResponse) (results[0]));
        }

        /// <remarks/>
        public void sendConfirmationAsync(confirmationDTO SaleConf_req)
        {
            this.sendConfirmationAsync(SaleConf_req, null);
        }

        /// <remarks/>
        public void sendConfirmationAsync(confirmationDTO SaleConf_req, object userState)
        {
            if ((this.sendConfirmationOperationCompleted == null))
            {
                this.sendConfirmationOperationCompleted =
                    new System.Threading.SendOrPostCallback(this.OnsendConfirmationOperationCompleted);
            }
            this.InvokeAsync("sendConfirmation", new object[]
            {
                SaleConf_req
            }, this.sendConfirmationOperationCompleted, userState);
        }

        private void OnsendConfirmationOperationCompleted(object arg)
        {
            if ((this.sendConfirmationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs =
                    ((System.Web.Services.Protocols.InvokeCompletedEventArgs) (arg));
                this.sendConfirmationCompleted(this,
                    new sendConfirmationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
                        invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.s2m.messaging/")]
    public partial class confirmationDTO : requestMessageSpec
    {

        private string cRNField;

        private string mIDField;

        private string sIGNATUREField;

        private string tRNField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CRN
        {
            get { return this.cRNField; }
            set { this.cRNField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MID
        {
            get { return this.mIDField; }
            set { this.mIDField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SIGNATURE
        {
            get { return this.sIGNATUREField; }
            set { this.sIGNATUREField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TRN
        {
            get { return this.tRNField; }
            set { this.tRNField = value; }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof (confirmationDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.s2m.messaging/")]
    public abstract partial class requestMessageSpec
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof (generalResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof (saleConfResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.s2m.messaging/")]
    public abstract partial class responseMessageSpec
    {

        private string descriptionField;

        private bool successfulField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description
        {
            get { return this.descriptionField; }
            set { this.descriptionField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool successful
        {
            get { return this.successfulField; }
            set { this.successfulField = value; }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof (saleConfResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.s2m.messaging/")]
    public partial class generalResponse : responseMessageSpec
    {

        private string aIRField;

        private string dATEField;

        private string rESCODEField;

        private string sIGNATUREField;

        private string sTANField;

        private string tIMEField;

        private string tRNField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AIR
        {
            get { return this.aIRField; }
            set { this.aIRField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DATE
        {
            get { return this.dATEField; }
            set { this.dATEField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RESCODE
        {
            get { return this.rESCODEField; }
            set { this.rESCODEField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SIGNATURE
        {
            get { return this.sIGNATUREField; }
            set { this.sIGNATUREField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAN
        {
            get { return this.sTANField; }
            set { this.sTANField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TIME
        {
            get { return this.tIMEField; }
            set { this.tIMEField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TRN
        {
            get { return this.tRNField; }
            set { this.tRNField = value; }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.s2m.messaging/")]
    public partial class saleConfResponse : generalResponse
    {

        private string aMOUNTField;

        private string rEPETETIVEField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AMOUNT
        {
            get { return this.aMOUNTField; }
            set { this.aMOUNTField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string REPETETIVE
        {
            get { return this.rEPETETIVEField; }
            set { this.rEPETETIVEField = value; }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void sendConfirmationCompletedEventHandler(object sender, sendConfirmationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendConfirmationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal sendConfirmationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled,
            object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public saleConfResponse Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((saleConfResponse) (this.results[0]));
            }
        }
    }

}