//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FAQModel", "FK_SiteFAQ_FAQ", "FAQ", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Radyn.FAQ.Model.FAQ), "SiteFAQ", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Radyn.FAQ.Model.SiteFAQ), true)]
[assembly: EdmRelationshipAttribute("FAQModel", "FK_FAQContent_FAQ", "FAQ", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Radyn.FAQ.Model.FAQ), "FAQContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Radyn.FAQ.Model.FAQContent), true)]

#endregion

namespace Radyn.FAQ.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FAQEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FAQEntities object using the connection string found in the 'FAQEntities' section of the application configuration file.
        /// </summary>
        public FAQEntities() : base("name=FAQEntities", "FAQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FAQEntities object.
        /// </summary>
        public FAQEntities(string connectionString) : base(connectionString, "FAQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FAQEntities object.
        /// </summary>
        public FAQEntities(EntityConnection connection) : base(connection, "FAQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FAQ> FAQs
        {
            get
            {
                if ((_FAQs == null))
                {
                    _FAQs = base.CreateObjectSet<FAQ>("FAQs");
                }
                return _FAQs;
            }
        }
        private ObjectSet<FAQ> _FAQs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SiteFAQ> SiteFAQs
        {
            get
            {
                if ((_SiteFAQs == null))
                {
                    _SiteFAQs = base.CreateObjectSet<SiteFAQ>("SiteFAQs");
                }
                return _SiteFAQs;
            }
        }
        private ObjectSet<SiteFAQ> _SiteFAQs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FAQContent> FAQContents
        {
            get
            {
                if ((_FAQContents == null))
                {
                    _FAQContents = base.CreateObjectSet<FAQContent>("FAQContents");
                }
                return _FAQContents;
            }
        }
        private ObjectSet<FAQContent> _FAQContents;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FAQs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFAQs(FAQ fAQ)
        {
            base.AddObject("FAQs", fAQ);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SiteFAQs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSiteFAQs(SiteFAQ siteFAQ)
        {
            base.AddObject("SiteFAQs", siteFAQ);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FAQContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFAQContents(FAQContent fAQContent)
        {
            base.AddObject("FAQContents", fAQContent);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FAQModel", Name="FAQ")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FAQ : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FAQ object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        /// <param name="answer">Initial value of the Answer property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static FAQ CreateFAQ(global::System.Guid id, global::System.String question, global::System.String answer, global::System.String createDate)
        {
            FAQ fAQ = new FAQ();
            fAQ.Id = id;
            fAQ.Question = question;
            fAQ.Answer = answer;
            fAQ.CreateDate = createDate;
            return fAQ;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatorId
        {
            get
            {
                return _CreatorId;
            }
            set
            {
                OnCreatorIdChanging(value);
                ReportPropertyChanging("CreatorId");
                _CreatorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorId");
                OnCreatorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatorId;
        partial void OnCreatorIdChanging(Nullable<global::System.Guid> value);
        partial void OnCreatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.String _CreateDate;
        partial void OnCreateDateChanging(global::System.String value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewCount;
        partial void OnViewCountChanging(Nullable<global::System.Int32> value);
        partial void OnViewCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ThumbnailId
        {
            get
            {
                return _ThumbnailId;
            }
            set
            {
                OnThumbnailIdChanging(value);
                ReportPropertyChanging("ThumbnailId");
                _ThumbnailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThumbnailId");
                OnThumbnailIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ThumbnailId;
        partial void OnThumbnailIdChanging(Nullable<global::System.Guid> value);
        partial void OnThumbnailIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FAQModel", "FK_SiteFAQ_FAQ", "SiteFAQ")]
        public SiteFAQ SiteFAQ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiteFAQ>("FAQModel.FK_SiteFAQ_FAQ", "SiteFAQ").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiteFAQ>("FAQModel.FK_SiteFAQ_FAQ", "SiteFAQ").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SiteFAQ> SiteFAQReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiteFAQ>("FAQModel.FK_SiteFAQ_FAQ", "SiteFAQ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SiteFAQ>("FAQModel.FK_SiteFAQ_FAQ", "SiteFAQ", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FAQModel", "FK_FAQContent_FAQ", "FAQContent")]
        public EntityCollection<FAQContent> FAQContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FAQContent>("FAQModel.FK_FAQContent_FAQ", "FAQContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FAQContent>("FAQModel.FK_FAQContent_FAQ", "FAQContent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FAQModel", Name="FAQContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FAQContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FAQContent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static FAQContent CreateFAQContent(global::System.Guid id, global::System.String languageId)
        {
            FAQContent fAQContent = new FAQContent();
            fAQContent.Id = id;
            fAQContent.LanguageId = languageId;
            return fAQContent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                if (_LanguageId != value)
                {
                    OnLanguageIdChanging(value);
                    ReportPropertyChanging("LanguageId");
                    _LanguageId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LanguageId");
                    OnLanguageIdChanged();
                }
            }
        }
        private global::System.String _LanguageId;
        partial void OnLanguageIdChanging(global::System.String value);
        partial void OnLanguageIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FAQModel", "FK_FAQContent_FAQ", "FAQ")]
        public FAQ FAQ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FAQ>("FAQModel.FK_FAQContent_FAQ", "FAQ").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FAQ>("FAQModel.FK_FAQContent_FAQ", "FAQ").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FAQ> FAQReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FAQ>("FAQModel.FK_FAQContent_FAQ", "FAQ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FAQ>("FAQModel.FK_FAQContent_FAQ", "FAQ", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FAQModel", Name="SiteFAQ")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SiteFAQ : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SiteFAQ object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SiteFAQ CreateSiteFAQ(global::System.Guid id)
        {
            SiteFAQ siteFAQ = new SiteFAQ();
            siteFAQ.Id = id;
            return siteFAQ;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FAQModel", "FK_SiteFAQ_FAQ", "FAQ")]
        public FAQ FAQ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FAQ>("FAQModel.FK_SiteFAQ_FAQ", "FAQ").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FAQ>("FAQModel.FK_SiteFAQ_FAQ", "FAQ").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FAQ> FAQReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FAQ>("FAQModel.FK_SiteFAQ_FAQ", "FAQ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FAQ>("FAQModel.FK_SiteFAQ_FAQ", "FAQ", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
